lib.page = JSON
lib.page {
    fields {
        id = TEXT
        id {
            field = uid
            required = 1
            intval = 1
        }
        pid = TEXT
        pid {
            field = pid
            required = 1
            intval = 1
        }
        title = TEXT
        title {
            field = title
            required = 1
        }
        type =< lib.doktypeName
        meta {
            fields {
                title = TEXT
                title {
                    field = seo_title
                    required = 1
                }
                subtitle = TEXT
                subtitle {
                    field = subtitle
                    required = 1
                }
                abstract = TEXT
                abstract {
                    field = abstract
                    required = 1
                }
                description = TEXT
                description {
                    field = description
                }
                keywords = TEXT
                keywords {
                    field = keywords
                }
                canonical = TEXT
                canonical {
                    field = canonical_link
                    htmlSpecialChars = 1
                    typolink {
                        parameter {
                            field = canonical_link
                        }
                        returnLast = url
                    }
                }

            }
        }
        socialMedia {
            fields {
                ogTitle = TEXT
                ogTitle {
                    field = og_title
                }
                ogDescription = TEXT
                ogDescription {
                    field = og_description
                }
                ogImage = TEXT
                ogImage {
                    dataProcessing {
                        10 = FriendsOfTYPO3\Headless\DataProcessing\FilesProcessor
                        10 {
                            as = media
                            references.fieldName = og_image
                        }
                    }
                }
                twitterTitle = TEXT
                twitterTitle {
                    field = twitter_title
                }
                twitterDescription = TEXT
                twitterDescription {
                    field = twitter_description
                }
                twitterCard = TEXT
                twitterCard {
                    field = twitter_card
                }
                twitterImage = TEXT
                twitterImage {
                    dataProcessing {
                        10 = FriendsOfTYPO3\Headless\DataProcessing\FilesProcessor
                        10 {
                            as = media
                            references.fieldName = twitter_image
                        }
                    }
                }
            }
        }
        resources {
            fields {
                media = TEXT
                media {
                    dataProcessing {
                        10 = FriendsOfTYPO3\Headless\DataProcessing\FilesProcessor
                        10 {
                            as = media
                            references.fieldName = media
                        }
                    }
                }
            }
        }
        categories = COA
        categories {
            10 = CONTENT
            10 {
                table = sys_category
                select {
                    pidInList = root
                    selectFields = sys_category.title
                    join = sys_category_record_mm on sys_category_record_mm.uid_local = sys_category.uid
                    where {
                        field = uid
                        wrap = AND sys_category_record_mm.tablenames = 'pages' AND sys_category_record_mm.uid_foreign=|
                    }
                }
                renderObj = TEXT
                renderObj {
                    field = title
                    wrap = |###BREAK###
                }
            }
            stdWrap.split {
                token = ###BREAK###
                cObjNum = 1 |*|2|*| 3
                1 {
                    current = 1
                    stdWrap.wrap = |
                }
                2 {
                    current = 1
                    stdWrap.wrap = ,|
                }
                3 {
                    current = 1
                    stdWrap.wrap = |
                }
            }
        }
        editorial {
            fields {
                author = TEXT
                author {
                    field = author
                }
                authorEmail = TEXT
                authorEmail {
                    field = author_email
                }
            }
        }
        navigation {
            fields {
                slug = TEXT
                slug {
                    field = slug
                }
                navTitle = TEXT
                navTitle {
                    field = nav_title
                }
                target = TEXT
                target {
                    field = target
                }
                noSearch = TEXT
                noSearch {
                    field = no_search
                }
            }
        }
        breadcrumbs =< lib.breadcrumbs
        cache {
            fields {
                timeout = TEXT
                timeout {
                    field = timeout
                }
                tags = TEXT
                tags {
                    field = cache_tags
                }
            }
        }
        appearance {
            fields {
                layout = TEXT
                layout {
                    field = layout
                    wrap = layout-|
                }
                backendLayout = TEXT
                backendLayout {
                    field = backend_layout
                    ifEmpty {
                        data = levelfield:-2,backend_layout_next_level,slide
                        ifEmpty.ifEmpty = default
                    }
                    replacement.10 {
                        search = pagets__
                        replace =
                    }
                }
                backendLayoutNextLevel = TEXT
                backendLayoutNextLevel {
                    field = backend_layout_next_level
                    replacement.10 {
                        search = pagets__
                        replace =
                    }
                }
                newUntil = TEXT
                newUntil {
                    field = newUntil
                }
            }
        }
        l10n {
            fields {
                languageId = TEXT
                languageId {
                    field = sys_language_uid
                    intval = 1
                }
            }
        }
        system {
            fields {
                tstamp = TEXT
                tstamp {
                    field = tstamp
                    intval = 1
                }
                crdate = TEXT
                crdate {
                    field = crdate
                    intval = 1
                }
                starttime = TEXT
                starttime {
                    field = starttime
                    intval = 1
                }
                endtime = TEXT
                endtime {
                    field = endtime
                    intval = 1
                }
                feGroup = TEXT
                feGroup {
                    field = fe_group
                }
                sorting = TEXT
                sorting {
                    field = sorting
                    intval = 1
                }
            }
        }
    }
}
