name: CI

on: [push, pull_request]

jobs:
  php-lint:
    name: "PHP linter"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [7.2, 7.3, 7.4]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-versions }}"
      - name: "Cache composer dependencies"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-versions }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            php-${{ matrix.php-versions }}-composer-
      - name: "Install composer dependencies"
        run: composer install --no-progress
      - name: "Run PHP lint"
        run: "composer run-script test-php-lint"
  php-cs-fixer:
    name: "PHP-CS-Fixer"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [7.4]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-versions }}"
      - name: "Cache composer dependencies"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-versions }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            php-${{ matrix.php-versions }}-composer-
      - name: "Install composer dependencies"
        run: composer install --no-progress
      - name: "Run PHP-CS-Fixer"
        run: "composer run-script test-php-cs-fixer"
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        php-versions: [7.2, 7.3, 7.4]
        typo3-versions:
          - { typo3: 9, testing: 4 }
          - { typo3: 10, testing: 5 }

    name: "Run tests with PHP ${{ matrix.php-versions }} using TYPO3 ${{ matrix.typo3-versions.typo3 }} with testing framework version ${{ matrix.typo3-versions.testing }}"
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl, mbstring, pdo_sqlite

      - name: "Cache composer dependencies"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-versions }}-typo3-${{ matrix.typo3-versions.typo3 }}-testing-${{ matrix.typo3-versions.testing }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            php-${{ matrix.php-versions }}-typo3-${{ matrix.typo3-versions.typo3 }}-testing-${{ matrix.typo3-versions.testing }}composer-
            php-${{ matrix.php-versions }}-typo3-

      - name: "Install composer dependencies"
        run: composer require typo3/minimal "^${{ matrix.typo3-versions.typo3 }}" typo3/testing-framework "^${{ matrix.typo3-versions.testing }}" --prefer-dist --no-progress --no-suggest

      - name: "Run Unit tests"
        run: composer run-script test-unit

      - name: "Functional tests"
        run: composer run-script test-functional
  tag-valid:
    name: "Check for valid tag"

    # Run only if tests job is successful
    needs:
      - php-lint
      - php-cs-fixer
      - tests

    # Run only if it's a tag in general (as regex is not possible here)
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    # Save status for use in other jobs
    outputs:
      status: ${{ steps.check-tag.outputs.match }}

    steps:
      - name: "Check if trigger is a valid tag"
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo ::set-output name=match::true
          fi

  ter-release:
    name: "TYPO3 TER release"

    # Depend on a valid tag
    needs: tag-valid
    if: needs.tag-valid.outputs.status == 'true'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [7.4]

    env:
      TYPO3_EXTENSION_KEY: headless
      TYPO3_USER: ${{ secrets.TYPO3_USER }}
      TYPO3_PASSWORD: ${{ secrets.TYPO3_PASSWORD }}

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.TYPO3_EXTENSION_KEY }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl, mbstring, xml, soap, zip, curl

      - name: "Install TYPO3 TER client"
        run: composer global require namelesscoder/typo3-repository-client "^2.0" --prefer-dist --no-progress --no-suggest

      - name: "Remove .git folder"
        run: rm -rf ./$TYPO3_EXTENSION_KEY/.git

      - name: "Upload EXT:${{ env.TYPO3_EXTENSION_KEY }} as ${{ github.event.ref }} to TER"
        run: php ~/.composer/vendor/bin/upload "./$TYPO3_EXTENSION_KEY" "$TYPO3_USER" "$TYPO3_PASSWORD" "${{ github.event.head_commit.message }}"
